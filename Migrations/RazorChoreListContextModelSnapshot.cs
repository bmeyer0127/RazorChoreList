// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorChoreList.Data;

#nullable disable

namespace RazorChoreList.Migrations
{
    [DbContext(typeof(RazorChoreListContext))]
    partial class RazorChoreListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Chore", b =>
                {
                    b.Property<int>("ChoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChoreName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompletionStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PeopleID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChoreID");

                    b.HasIndex("PeopleID");

                    b.ToTable("Chore");
                });

            modelBuilder.Entity("People", b =>
                {
                    b.Property<int>("PeopleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChoreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PeopleID");

                    b.HasIndex("ChoreID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Chore", b =>
                {
                    b.HasOne("People", "people")
                        .WithMany()
                        .HasForeignKey("PeopleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("people");
                });

            modelBuilder.Entity("People", b =>
                {
                    b.HasOne("Chore", null)
                        .WithMany("People")
                        .HasForeignKey("ChoreID");
                });

            modelBuilder.Entity("Chore", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
